<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>study / algorithm on cloxnu&#39;s Creative Space</title>
    <link>https://creative.clox.nu/categories/study-/-algorithm/</link>
    <description>Recent content in study / algorithm on cloxnu&#39;s Creative Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://creative.clox.nu/categories/study-/-algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generalized Suffix Tree</title>
      <link>https://creative.clox.nu/blog/generalized-suffix-tree/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0800</pubDate>
      
      <guid>https://creative.clox.nu/blog/generalized-suffix-tree/</guid>
      <description>An implementation of generalized suffix tree using Ukkonen&amp;rsquo;s algorithm.
In this page:
 The longest common substring problem How it works GST versus Dynamic programming   Inspired by:
Ukkonen, E. On-line construction of suffix trees. Algorithmica 14, 249â€“260 (1995).
https://www.cs.helsinki.fi/u/ukkonen/SuffixT1withFigs.pdf
 The longest common substring problem Given two or more strings, find the longest common substring of these strings. Concretely, the longest common substring of the two strings &amp;ldquo;cacaocac&amp;rdquo; and &amp;ldquo;ccaooc&amp;rdquo; is &amp;ldquo;cao&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>
